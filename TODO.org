* DONE Free off-screen bullets back to the bullet pool
* DONE Create a bullet data type that wraps the bullet system and bullet id into one data structure
** DONE Create a BulletRef struct with member variables bullet and bullet_system
** DONE Change all bullet methods to take BulletRef as an argument instead of a bullet system and bullet index
* DONE Create some sane subdirectories for source and data files
* DONE Open port for a REPL so the program can be modified as it is running
* DONE Allow many types of bullet sprites
** DONE Create a sprite sheet struct with Guile bindings
** DONE Add a sprite sheet member variable to bullet system
** DONE Use sub-bitmaps of the sprite sheet to set bullet bitmaps
* DONE Add angular velocity to bullets
* TODO Stop using Euler integration
** Maybe...
* DONE Add a bounding box to the bullet system that specifies the bounds of the game area
** Bullets outside of this box are killed but right now it is hard-coded in remove_out_of_bounds_bullet
** DONE Add a bounding box struct
* TODO Add a counter to bullet system that counts active bullets
* DONE Rotate bullet sprites in the direction they are moving
* DONE Break Scheme code into modules
** DONE Coroutine module
** DONE Scheduler module
** DONE Bullet pattern primitives module
** DONE Yield functions module
* DONE Create some macros
** DONE Coroutine macro
* DONE Add keyboard event callbacks
** DONE Map allegro key codes to scheme symbols in a hash table
* DONE Add player and enemies
** No need for C here, this can be done on the Scheme side
* DONE Add collision detection
** DONE Collision between player and enemy bullets
** DONE Collision between player bullets and enemies
* TODO Develop actual gameplay :P
* DONE Refactor game loop into several smaller functions
* DONE Control FPS rendering from Scheme
** It's hard-coded in the game loop right now
* DONE Create font smob
* TODO Pick a C code formatting style and STICK TO IT FFS
** I keep switching brace styles for no good reason...
* DONE Get rid of those annoying compiler warnings for scm_c_define_gsubr
** Need to talk to the folks on #guile about this
* TODO Improve bullet pool code
** Use a more efficient method to find unused bullets in the pool.
* DONE Refactor scheduler
** Use the srfi-9 records module
* TODO Add GPL snippet to every source file
* DONE Implement reference counting for bullets to prevent weird bugs
* TODO Write unit tests
** Need a good way to do this with Guile
* TODO Animated sprites
* TODO Expand font bindings
** Bind more of Allegro's font functions with Guile.
* TODO Add bindings for Allegro audio addon
** Need some minimal bindings for background music and short sound effects
** DONE Sound effects
** TODO Music streams
* TODO Custom window resolutions and fullscreen mode
** DONE Specify window size and fullscreen mode when initializing
** TODO Allow user to change screen size and fullscreen mode after initializing
* DONE Scenes
** Separate game screens into units
* DONE 2D scene graph
* DONE Add Director module
** A concept lifted from cocos2d. the director manages the scenes in the game.
* TODO Prefix all C functions with gnumaku_
** I was lazy and didn't do this, but now Gnumaku is a shared lib so it's necessary.
* DONE Level format
** A proc + a Level record
* TODO Add a register procedure to bullet-types module
** Allow user to register bullet types instead of having hardcoded ones
* Switch to frame-based timing
** Every time the update hook is called, a timer should be incremented by one and the game should use this to time events.
** DONE Time agenda events by frames
** DONE Time game object motion by frames
* DONE Use GOOPS
** OOP will be nice for generic interfaces
* TODO Docstrings for EVERYTHING
** I have been doing a terrible job at documenting this code.
* DONE Add event emitter class
** Must support multiple listeners per event type.
* TODO UI Widgets
** some ideas. some are necessary, others are likely not
** TODO Text label
** TODO Text input field
** TODO Menu
*** TODO Text menu item
*** TODO Text input menu item
*** TODO Option cycle menu item
*** TODO Toggle menu item
** TODO Container
*** TODO Layout strategies
**** TODO Manual
**** TODO Vertical
**** TODO Horizontal
**** TODO Table (m x n)
