(define-module (demo enemies)
  #:use-module (oop goops)
  #:use-module (gnumaku generics)
  #:use-module (gnumaku core)
  #:use-module (gnumaku scene-graph)
  #:use-module (gnumaku assets)
  #:use-module (gnumaku coroutine)
  #:use-module (gnumaku actions)
  #:use-module (gnumaku path)
  #:use-module (demo patterns)
  #:use-module (demo actor)
  #:use-module (demo enemy)
  #:use-module (demo level)
  #:export (make-enemy-1))

(define (make-enemy-1 x y)
  (let ((image (sprite-sheet-tile (load-asset "enemy.png" 64 48 0 0) 0)))
    (let ((enemy (make <enemy> #:sprite (make-sprite image) #:health 50 #:points 100)))
      (set! (position enemy) (make-vector2 x y))
      (set! (shot-sound enemy) (load-asset "enemy_shot.wav"))
      (set! (hitbox enemy) (make-rect 0 0 48 32))
      (set! (health enemy) 200)
      (set! (action enemy) (lambda (enemy)
                             (spiral1 enemy)))
      enemy)))
